// source: vendor/github.com/anytypeio/go-anytype-library/pb/model/protos/models.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.anytype.model.Account', null, global);
goog.exportSymbol('proto.anytype.model.Account.Avatar', null, global);
goog.exportSymbol('proto.anytype.model.Account.Avatar.AvatarCase', null, global);
goog.exportSymbol('proto.anytype.model.Block', null, global);
goog.exportSymbol('proto.anytype.model.Block.Align', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Bookmark', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Dataview', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Dataview.Filter', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Dataview.Filter.Condition', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Dataview.Filter.Operator', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Dataview.Relation', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Dataview.Sort', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Dataview.Sort.Type', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Dataview.View', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Dataview.View.Type', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Div', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Div.Style', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.File', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.File.State', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.File.Type', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Icon', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Layout', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Layout.Style', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Link', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Link.Style', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Smartblock', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Text', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Text.Mark', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Text.Mark.Type', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Text.Marks', null, global);
goog.exportSymbol('proto.anytype.model.Block.Content.Text.Style', null, global);
goog.exportSymbol('proto.anytype.model.Block.ContentCase', null, global);
goog.exportSymbol('proto.anytype.model.Block.Position', null, global);
goog.exportSymbol('proto.anytype.model.Block.Restrictions', null, global);
goog.exportSymbol('proto.anytype.model.BlockMetaOnly', null, global);
goog.exportSymbol('proto.anytype.model.LinkPreview', null, global);
goog.exportSymbol('proto.anytype.model.LinkPreview.Type', null, global);
goog.exportSymbol('proto.anytype.model.Range', null, global);
goog.exportSymbol('proto.anytype.model.SmartBlockSnapshotBase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.SmartBlockSnapshotBase = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.anytype.model.SmartBlockSnapshotBase.repeatedFields_, null);
};
goog.inherits(proto.anytype.model.SmartBlockSnapshotBase, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.SmartBlockSnapshotBase.displayName = 'proto.anytype.model.SmartBlockSnapshotBase';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.anytype.model.Block.repeatedFields_, proto.anytype.model.Block.oneofGroups_);
};
goog.inherits(proto.anytype.model.Block, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.displayName = 'proto.anytype.model.Block';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Restrictions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Restrictions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Restrictions.displayName = 'proto.anytype.model.Block.Restrictions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.displayName = 'proto.anytype.model.Block.Content';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Layout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.Layout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Layout.displayName = 'proto.anytype.model.Block.Content.Layout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Link = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.Link, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Link.displayName = 'proto.anytype.model.Block.Content.Link';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Div = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.Div, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Div.displayName = 'proto.anytype.model.Block.Content.Div';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Bookmark = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.Bookmark, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Bookmark.displayName = 'proto.anytype.model.Block.Content.Bookmark';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Icon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.Icon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Icon.displayName = 'proto.anytype.model.Block.Content.Icon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Text = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.Text, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Text.displayName = 'proto.anytype.model.Block.Content.Text';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Text.Marks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.anytype.model.Block.Content.Text.Marks.repeatedFields_, null);
};
goog.inherits(proto.anytype.model.Block.Content.Text.Marks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Text.Marks.displayName = 'proto.anytype.model.Block.Content.Text.Marks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Text.Mark = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.Text.Mark, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Text.Mark.displayName = 'proto.anytype.model.Block.Content.Text.Mark';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.File = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.File, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.File.displayName = 'proto.anytype.model.Block.Content.File';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Smartblock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.Smartblock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Smartblock.displayName = 'proto.anytype.model.Block.Content.Smartblock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Dataview = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.anytype.model.Block.Content.Dataview.repeatedFields_, null);
};
goog.inherits(proto.anytype.model.Block.Content.Dataview, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Dataview.displayName = 'proto.anytype.model.Block.Content.Dataview';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Dataview.View = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.anytype.model.Block.Content.Dataview.View.repeatedFields_, null);
};
goog.inherits(proto.anytype.model.Block.Content.Dataview.View, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Dataview.View.displayName = 'proto.anytype.model.Block.Content.Dataview.View';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Dataview.Relation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.Dataview.Relation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Dataview.Relation.displayName = 'proto.anytype.model.Block.Content.Dataview.Relation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Dataview.Sort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.Dataview.Sort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Dataview.Sort.displayName = 'proto.anytype.model.Block.Content.Dataview.Sort';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Block.Content.Dataview.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Block.Content.Dataview.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Block.Content.Dataview.Filter.displayName = 'proto.anytype.model.Block.Content.Dataview.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.BlockMetaOnly = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.BlockMetaOnly, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.BlockMetaOnly.displayName = 'proto.anytype.model.BlockMetaOnly';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Range = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Range, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Range.displayName = 'proto.anytype.model.Range';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Account = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.Account, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Account.displayName = 'proto.anytype.model.Account';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.Account.Avatar = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.anytype.model.Account.Avatar.oneofGroups_);
};
goog.inherits(proto.anytype.model.Account.Avatar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.Account.Avatar.displayName = 'proto.anytype.model.Account.Avatar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.anytype.model.LinkPreview = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.anytype.model.LinkPreview, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.anytype.model.LinkPreview.displayName = 'proto.anytype.model.LinkPreview';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.anytype.model.SmartBlockSnapshotBase.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.SmartBlockSnapshotBase.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.SmartBlockSnapshotBase.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.SmartBlockSnapshotBase} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.SmartBlockSnapshotBase.toObject = function(includeInstance, msg) {
  var f, obj = {
    blocksList: jspb.Message.toObjectList(msg.getBlocksList(),
    proto.anytype.model.Block.toObject, includeInstance),
    details: (f = msg.getDetails()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    filekeys: (f = msg.getFilekeys()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.SmartBlockSnapshotBase}
 */
proto.anytype.model.SmartBlockSnapshotBase.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.SmartBlockSnapshotBase;
  return proto.anytype.model.SmartBlockSnapshotBase.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.SmartBlockSnapshotBase} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.SmartBlockSnapshotBase}
 */
proto.anytype.model.SmartBlockSnapshotBase.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.anytype.model.Block;
      reader.readMessage(value,proto.anytype.model.Block.deserializeBinaryFromReader);
      msg.addBlocks(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setFilekeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.SmartBlockSnapshotBase.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.SmartBlockSnapshotBase.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.SmartBlockSnapshotBase} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.SmartBlockSnapshotBase.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlocksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.anytype.model.Block.serializeBinaryToWriter
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getFilekeys();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Block blocks = 1;
 * @return {!Array<!proto.anytype.model.Block>}
 */
proto.anytype.model.SmartBlockSnapshotBase.prototype.getBlocksList = function() {
  return /** @type{!Array<!proto.anytype.model.Block>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.anytype.model.Block, 1));
};


/**
 * @param {!Array<!proto.anytype.model.Block>} value
 * @return {!proto.anytype.model.SmartBlockSnapshotBase} returns this
*/
proto.anytype.model.SmartBlockSnapshotBase.prototype.setBlocksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.anytype.model.Block=} opt_value
 * @param {number=} opt_index
 * @return {!proto.anytype.model.Block}
 */
proto.anytype.model.SmartBlockSnapshotBase.prototype.addBlocks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.anytype.model.Block, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.anytype.model.SmartBlockSnapshotBase} returns this
 */
proto.anytype.model.SmartBlockSnapshotBase.prototype.clearBlocksList = function() {
  return this.setBlocksList([]);
};


/**
 * optional google.protobuf.Struct details = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.anytype.model.SmartBlockSnapshotBase.prototype.getDetails = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.anytype.model.SmartBlockSnapshotBase} returns this
*/
proto.anytype.model.SmartBlockSnapshotBase.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.SmartBlockSnapshotBase} returns this
 */
proto.anytype.model.SmartBlockSnapshotBase.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.SmartBlockSnapshotBase.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Struct fileKeys = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.anytype.model.SmartBlockSnapshotBase.prototype.getFilekeys = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.anytype.model.SmartBlockSnapshotBase} returns this
*/
proto.anytype.model.SmartBlockSnapshotBase.prototype.setFilekeys = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.SmartBlockSnapshotBase} returns this
 */
proto.anytype.model.SmartBlockSnapshotBase.prototype.clearFilekeys = function() {
  return this.setFilekeys(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.SmartBlockSnapshotBase.prototype.hasFilekeys = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.anytype.model.Block.repeatedFields_ = [4];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.anytype.model.Block.oneofGroups_ = [[11,14,15,16,17,18,19,20,21]];

/**
 * @enum {number}
 */
proto.anytype.model.Block.ContentCase = {
  CONTENT_NOT_SET: 0,
  SMARTBLOCK: 11,
  TEXT: 14,
  FILE: 15,
  LAYOUT: 16,
  DIV: 17,
  BOOKMARK: 18,
  ICON: 19,
  LINK: 20,
  DATAVIEW: 21
};

/**
 * @return {proto.anytype.model.Block.ContentCase}
 */
proto.anytype.model.Block.prototype.getContentCase = function() {
  return /** @type {proto.anytype.model.Block.ContentCase} */(jspb.Message.computeOneofCase(this, proto.anytype.model.Block.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fields: (f = msg.getFields()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    restrictions: (f = msg.getRestrictions()) && proto.anytype.model.Block.Restrictions.toObject(includeInstance, f),
    childrenidsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    backgroundcolor: jspb.Message.getFieldWithDefault(msg, 5, ""),
    align: jspb.Message.getFieldWithDefault(msg, 6, 0),
    smartblock: (f = msg.getSmartblock()) && proto.anytype.model.Block.Content.Smartblock.toObject(includeInstance, f),
    text: (f = msg.getText()) && proto.anytype.model.Block.Content.Text.toObject(includeInstance, f),
    file: (f = msg.getFile()) && proto.anytype.model.Block.Content.File.toObject(includeInstance, f),
    layout: (f = msg.getLayout()) && proto.anytype.model.Block.Content.Layout.toObject(includeInstance, f),
    div: (f = msg.getDiv()) && proto.anytype.model.Block.Content.Div.toObject(includeInstance, f),
    bookmark: (f = msg.getBookmark()) && proto.anytype.model.Block.Content.Bookmark.toObject(includeInstance, f),
    icon: (f = msg.getIcon()) && proto.anytype.model.Block.Content.Icon.toObject(includeInstance, f),
    link: (f = msg.getLink()) && proto.anytype.model.Block.Content.Link.toObject(includeInstance, f),
    dataview: (f = msg.getDataview()) && proto.anytype.model.Block.Content.Dataview.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block}
 */
proto.anytype.model.Block.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block;
  return proto.anytype.model.Block.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block}
 */
proto.anytype.model.Block.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setFields(value);
      break;
    case 3:
      var value = new proto.anytype.model.Block.Restrictions;
      reader.readMessage(value,proto.anytype.model.Block.Restrictions.deserializeBinaryFromReader);
      msg.setRestrictions(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addChildrenids(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackgroundcolor(value);
      break;
    case 6:
      var value = /** @type {!proto.anytype.model.Block.Align} */ (reader.readEnum());
      msg.setAlign(value);
      break;
    case 11:
      var value = new proto.anytype.model.Block.Content.Smartblock;
      reader.readMessage(value,proto.anytype.model.Block.Content.Smartblock.deserializeBinaryFromReader);
      msg.setSmartblock(value);
      break;
    case 14:
      var value = new proto.anytype.model.Block.Content.Text;
      reader.readMessage(value,proto.anytype.model.Block.Content.Text.deserializeBinaryFromReader);
      msg.setText(value);
      break;
    case 15:
      var value = new proto.anytype.model.Block.Content.File;
      reader.readMessage(value,proto.anytype.model.Block.Content.File.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    case 16:
      var value = new proto.anytype.model.Block.Content.Layout;
      reader.readMessage(value,proto.anytype.model.Block.Content.Layout.deserializeBinaryFromReader);
      msg.setLayout(value);
      break;
    case 17:
      var value = new proto.anytype.model.Block.Content.Div;
      reader.readMessage(value,proto.anytype.model.Block.Content.Div.deserializeBinaryFromReader);
      msg.setDiv(value);
      break;
    case 18:
      var value = new proto.anytype.model.Block.Content.Bookmark;
      reader.readMessage(value,proto.anytype.model.Block.Content.Bookmark.deserializeBinaryFromReader);
      msg.setBookmark(value);
      break;
    case 19:
      var value = new proto.anytype.model.Block.Content.Icon;
      reader.readMessage(value,proto.anytype.model.Block.Content.Icon.deserializeBinaryFromReader);
      msg.setIcon(value);
      break;
    case 20:
      var value = new proto.anytype.model.Block.Content.Link;
      reader.readMessage(value,proto.anytype.model.Block.Content.Link.deserializeBinaryFromReader);
      msg.setLink(value);
      break;
    case 21:
      var value = new proto.anytype.model.Block.Content.Dataview;
      reader.readMessage(value,proto.anytype.model.Block.Content.Dataview.deserializeBinaryFromReader);
      msg.setDataview(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFields();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getRestrictions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.anytype.model.Block.Restrictions.serializeBinaryToWriter
    );
  }
  f = message.getChildrenidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getBackgroundcolor();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAlign();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getSmartblock();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.anytype.model.Block.Content.Smartblock.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.anytype.model.Block.Content.Text.serializeBinaryToWriter
    );
  }
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.anytype.model.Block.Content.File.serializeBinaryToWriter
    );
  }
  f = message.getLayout();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.anytype.model.Block.Content.Layout.serializeBinaryToWriter
    );
  }
  f = message.getDiv();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.anytype.model.Block.Content.Div.serializeBinaryToWriter
    );
  }
  f = message.getBookmark();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.anytype.model.Block.Content.Bookmark.serializeBinaryToWriter
    );
  }
  f = message.getIcon();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.anytype.model.Block.Content.Icon.serializeBinaryToWriter
    );
  }
  f = message.getLink();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.anytype.model.Block.Content.Link.serializeBinaryToWriter
    );
  }
  f = message.getDataview();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.anytype.model.Block.Content.Dataview.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.anytype.model.Block.Position = {
  NONE: 0,
  TOP: 1,
  BOTTOM: 2,
  LEFT: 3,
  RIGHT: 4,
  INNER: 5,
  REPLACE: 6
};

/**
 * @enum {number}
 */
proto.anytype.model.Block.Align = {
  ALIGNLEFT: 0,
  ALIGNCENTER: 1,
  ALIGNRIGHT: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Restrictions.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Restrictions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Restrictions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Restrictions.toObject = function(includeInstance, msg) {
  var f, obj = {
    read: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    edit: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    remove: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    drag: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    dropon: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Restrictions}
 */
proto.anytype.model.Block.Restrictions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Restrictions;
  return proto.anytype.model.Block.Restrictions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Restrictions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Restrictions}
 */
proto.anytype.model.Block.Restrictions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRead(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEdit(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRemove(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDrag(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDropon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Restrictions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Restrictions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Restrictions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Restrictions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRead();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getEdit();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getRemove();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getDrag();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDropon();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional bool read = 1;
 * @return {boolean}
 */
proto.anytype.model.Block.Restrictions.prototype.getRead = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.anytype.model.Block.Restrictions} returns this
 */
proto.anytype.model.Block.Restrictions.prototype.setRead = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool edit = 2;
 * @return {boolean}
 */
proto.anytype.model.Block.Restrictions.prototype.getEdit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.anytype.model.Block.Restrictions} returns this
 */
proto.anytype.model.Block.Restrictions.prototype.setEdit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool remove = 3;
 * @return {boolean}
 */
proto.anytype.model.Block.Restrictions.prototype.getRemove = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.anytype.model.Block.Restrictions} returns this
 */
proto.anytype.model.Block.Restrictions.prototype.setRemove = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool drag = 4;
 * @return {boolean}
 */
proto.anytype.model.Block.Restrictions.prototype.getDrag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.anytype.model.Block.Restrictions} returns this
 */
proto.anytype.model.Block.Restrictions.prototype.setDrag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool dropOn = 5;
 * @return {boolean}
 */
proto.anytype.model.Block.Restrictions.prototype.getDropon = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.anytype.model.Block.Restrictions} returns this
 */
proto.anytype.model.Block.Restrictions.prototype.setDropon = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content}
 */
proto.anytype.model.Block.Content.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content;
  return proto.anytype.model.Block.Content.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content}
 */
proto.anytype.model.Block.Content.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Layout.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Layout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Layout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Layout.toObject = function(includeInstance, msg) {
  var f, obj = {
    style: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Layout}
 */
proto.anytype.model.Block.Content.Layout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Layout;
  return proto.anytype.model.Block.Content.Layout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Layout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Layout}
 */
proto.anytype.model.Block.Content.Layout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.anytype.model.Block.Content.Layout.Style} */ (reader.readEnum());
      msg.setStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Layout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Layout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Layout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Layout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.anytype.model.Block.Content.Layout.Style = {
  ROW: 0,
  COLUMN: 1,
  DIV: 2
};

/**
 * optional Style style = 1;
 * @return {!proto.anytype.model.Block.Content.Layout.Style}
 */
proto.anytype.model.Block.Content.Layout.prototype.getStyle = function() {
  return /** @type {!proto.anytype.model.Block.Content.Layout.Style} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.anytype.model.Block.Content.Layout.Style} value
 * @return {!proto.anytype.model.Block.Content.Layout} returns this
 */
proto.anytype.model.Block.Content.Layout.prototype.setStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Link.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Link.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Link} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Link.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetblockid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    style: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fields: (f = msg.getFields()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Link}
 */
proto.anytype.model.Block.Content.Link.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Link;
  return proto.anytype.model.Block.Content.Link.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Link} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Link}
 */
proto.anytype.model.Block.Content.Link.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetblockid(value);
      break;
    case 2:
      var value = /** @type {!proto.anytype.model.Block.Content.Link.Style} */ (reader.readEnum());
      msg.setStyle(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Link.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Link.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Link} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Link.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetblockid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getFields();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.anytype.model.Block.Content.Link.Style = {
  PAGE: 0,
  DATAVIEW: 1,
  DASHBOARD: 2,
  ARCHIVE: 3
};

/**
 * optional string targetBlockId = 1;
 * @return {string}
 */
proto.anytype.model.Block.Content.Link.prototype.getTargetblockid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Link} returns this
 */
proto.anytype.model.Block.Content.Link.prototype.setTargetblockid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Style style = 2;
 * @return {!proto.anytype.model.Block.Content.Link.Style}
 */
proto.anytype.model.Block.Content.Link.prototype.getStyle = function() {
  return /** @type {!proto.anytype.model.Block.Content.Link.Style} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.anytype.model.Block.Content.Link.Style} value
 * @return {!proto.anytype.model.Block.Content.Link} returns this
 */
proto.anytype.model.Block.Content.Link.prototype.setStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Struct fields = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.anytype.model.Block.Content.Link.prototype.getFields = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.anytype.model.Block.Content.Link} returns this
*/
proto.anytype.model.Block.Content.Link.prototype.setFields = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block.Content.Link} returns this
 */
proto.anytype.model.Block.Content.Link.prototype.clearFields = function() {
  return this.setFields(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.Content.Link.prototype.hasFields = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Div.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Div.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Div} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Div.toObject = function(includeInstance, msg) {
  var f, obj = {
    style: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Div}
 */
proto.anytype.model.Block.Content.Div.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Div;
  return proto.anytype.model.Block.Content.Div.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Div} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Div}
 */
proto.anytype.model.Block.Content.Div.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.anytype.model.Block.Content.Div.Style} */ (reader.readEnum());
      msg.setStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Div.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Div.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Div} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Div.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.anytype.model.Block.Content.Div.Style = {
  LINE: 0,
  DOTS: 1
};

/**
 * optional Style style = 1;
 * @return {!proto.anytype.model.Block.Content.Div.Style}
 */
proto.anytype.model.Block.Content.Div.prototype.getStyle = function() {
  return /** @type {!proto.anytype.model.Block.Content.Div.Style} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.anytype.model.Block.Content.Div.Style} value
 * @return {!proto.anytype.model.Block.Content.Div} returns this
 */
proto.anytype.model.Block.Content.Div.prototype.setStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Bookmark.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Bookmark.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Bookmark} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Bookmark.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imagehash: jspb.Message.getFieldWithDefault(msg, 4, ""),
    faviconhash: jspb.Message.getFieldWithDefault(msg, 5, ""),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Bookmark}
 */
proto.anytype.model.Block.Content.Bookmark.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Bookmark;
  return proto.anytype.model.Block.Content.Bookmark.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Bookmark} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Bookmark}
 */
proto.anytype.model.Block.Content.Bookmark.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImagehash(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFaviconhash(value);
      break;
    case 6:
      var value = /** @type {!proto.anytype.model.LinkPreview.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Bookmark.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Bookmark.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Bookmark} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Bookmark.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImagehash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFaviconhash();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.anytype.model.Block.Content.Bookmark.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Bookmark} returns this
 */
proto.anytype.model.Block.Content.Bookmark.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.anytype.model.Block.Content.Bookmark.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Bookmark} returns this
 */
proto.anytype.model.Block.Content.Bookmark.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.anytype.model.Block.Content.Bookmark.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Bookmark} returns this
 */
proto.anytype.model.Block.Content.Bookmark.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string imageHash = 4;
 * @return {string}
 */
proto.anytype.model.Block.Content.Bookmark.prototype.getImagehash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Bookmark} returns this
 */
proto.anytype.model.Block.Content.Bookmark.prototype.setImagehash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string faviconHash = 5;
 * @return {string}
 */
proto.anytype.model.Block.Content.Bookmark.prototype.getFaviconhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Bookmark} returns this
 */
proto.anytype.model.Block.Content.Bookmark.prototype.setFaviconhash = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional LinkPreview.Type type = 6;
 * @return {!proto.anytype.model.LinkPreview.Type}
 */
proto.anytype.model.Block.Content.Bookmark.prototype.getType = function() {
  return /** @type {!proto.anytype.model.LinkPreview.Type} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.anytype.model.LinkPreview.Type} value
 * @return {!proto.anytype.model.Block.Content.Bookmark} returns this
 */
proto.anytype.model.Block.Content.Bookmark.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Icon.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Icon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Icon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Icon.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Icon}
 */
proto.anytype.model.Block.Content.Icon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Icon;
  return proto.anytype.model.Block.Content.Icon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Icon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Icon}
 */
proto.anytype.model.Block.Content.Icon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Icon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Icon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Icon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Icon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.anytype.model.Block.Content.Icon.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Icon} returns this
 */
proto.anytype.model.Block.Content.Icon.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Text.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Text.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Text} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Text.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    style: jspb.Message.getFieldWithDefault(msg, 2, 0),
    marks: (f = msg.getMarks()) && proto.anytype.model.Block.Content.Text.Marks.toObject(includeInstance, f),
    checked: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    color: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Text}
 */
proto.anytype.model.Block.Content.Text.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Text;
  return proto.anytype.model.Block.Content.Text.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Text} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Text}
 */
proto.anytype.model.Block.Content.Text.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = /** @type {!proto.anytype.model.Block.Content.Text.Style} */ (reader.readEnum());
      msg.setStyle(value);
      break;
    case 3:
      var value = new proto.anytype.model.Block.Content.Text.Marks;
      reader.readMessage(value,proto.anytype.model.Block.Content.Text.Marks.deserializeBinaryFromReader);
      msg.setMarks(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChecked(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Text.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Text.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Text} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Text.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMarks();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.anytype.model.Block.Content.Text.Marks.serializeBinaryToWriter
    );
  }
  f = message.getChecked();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.anytype.model.Block.Content.Text.Style = {
  PARAGRAPH: 0,
  HEADER1: 1,
  HEADER2: 2,
  HEADER3: 3,
  HEADER4: 4,
  QUOTE: 5,
  CODE: 6,
  TITLE: 7,
  CHECKBOX: 8,
  MARKED: 9,
  NUMBERED: 10,
  TOGGLE: 11
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.anytype.model.Block.Content.Text.Marks.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Text.Marks.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Text.Marks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Text.Marks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Text.Marks.toObject = function(includeInstance, msg) {
  var f, obj = {
    marksList: jspb.Message.toObjectList(msg.getMarksList(),
    proto.anytype.model.Block.Content.Text.Mark.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Text.Marks}
 */
proto.anytype.model.Block.Content.Text.Marks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Text.Marks;
  return proto.anytype.model.Block.Content.Text.Marks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Text.Marks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Text.Marks}
 */
proto.anytype.model.Block.Content.Text.Marks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.anytype.model.Block.Content.Text.Mark;
      reader.readMessage(value,proto.anytype.model.Block.Content.Text.Mark.deserializeBinaryFromReader);
      msg.addMarks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Text.Marks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Text.Marks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Text.Marks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Text.Marks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.anytype.model.Block.Content.Text.Mark.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Mark marks = 1;
 * @return {!Array<!proto.anytype.model.Block.Content.Text.Mark>}
 */
proto.anytype.model.Block.Content.Text.Marks.prototype.getMarksList = function() {
  return /** @type{!Array<!proto.anytype.model.Block.Content.Text.Mark>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.anytype.model.Block.Content.Text.Mark, 1));
};


/**
 * @param {!Array<!proto.anytype.model.Block.Content.Text.Mark>} value
 * @return {!proto.anytype.model.Block.Content.Text.Marks} returns this
*/
proto.anytype.model.Block.Content.Text.Marks.prototype.setMarksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.anytype.model.Block.Content.Text.Mark=} opt_value
 * @param {number=} opt_index
 * @return {!proto.anytype.model.Block.Content.Text.Mark}
 */
proto.anytype.model.Block.Content.Text.Marks.prototype.addMarks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.anytype.model.Block.Content.Text.Mark, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.anytype.model.Block.Content.Text.Marks} returns this
 */
proto.anytype.model.Block.Content.Text.Marks.prototype.clearMarksList = function() {
  return this.setMarksList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Text.Mark.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Text.Mark.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Text.Mark} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Text.Mark.toObject = function(includeInstance, msg) {
  var f, obj = {
    range: (f = msg.getRange()) && proto.anytype.model.Range.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    param: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Text.Mark}
 */
proto.anytype.model.Block.Content.Text.Mark.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Text.Mark;
  return proto.anytype.model.Block.Content.Text.Mark.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Text.Mark} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Text.Mark}
 */
proto.anytype.model.Block.Content.Text.Mark.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.anytype.model.Range;
      reader.readMessage(value,proto.anytype.model.Range.deserializeBinaryFromReader);
      msg.setRange(value);
      break;
    case 2:
      var value = /** @type {!proto.anytype.model.Block.Content.Text.Mark.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Text.Mark.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Text.Mark.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Text.Mark} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Text.Mark.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRange();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.anytype.model.Range.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getParam();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.anytype.model.Block.Content.Text.Mark.Type = {
  STRIKETHROUGH: 0,
  KEYBOARD: 1,
  ITALIC: 2,
  BOLD: 3,
  UNDERSCORED: 4,
  LINK: 5,
  TEXTCOLOR: 6,
  BACKGROUNDCOLOR: 7,
  MENTION: 8
};

/**
 * optional Range range = 1;
 * @return {?proto.anytype.model.Range}
 */
proto.anytype.model.Block.Content.Text.Mark.prototype.getRange = function() {
  return /** @type{?proto.anytype.model.Range} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Range, 1));
};


/**
 * @param {?proto.anytype.model.Range|undefined} value
 * @return {!proto.anytype.model.Block.Content.Text.Mark} returns this
*/
proto.anytype.model.Block.Content.Text.Mark.prototype.setRange = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block.Content.Text.Mark} returns this
 */
proto.anytype.model.Block.Content.Text.Mark.prototype.clearRange = function() {
  return this.setRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.Content.Text.Mark.prototype.hasRange = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Type type = 2;
 * @return {!proto.anytype.model.Block.Content.Text.Mark.Type}
 */
proto.anytype.model.Block.Content.Text.Mark.prototype.getType = function() {
  return /** @type {!proto.anytype.model.Block.Content.Text.Mark.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.anytype.model.Block.Content.Text.Mark.Type} value
 * @return {!proto.anytype.model.Block.Content.Text.Mark} returns this
 */
proto.anytype.model.Block.Content.Text.Mark.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string param = 3;
 * @return {string}
 */
proto.anytype.model.Block.Content.Text.Mark.prototype.getParam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Text.Mark} returns this
 */
proto.anytype.model.Block.Content.Text.Mark.prototype.setParam = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.anytype.model.Block.Content.Text.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Text} returns this
 */
proto.anytype.model.Block.Content.Text.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Style style = 2;
 * @return {!proto.anytype.model.Block.Content.Text.Style}
 */
proto.anytype.model.Block.Content.Text.prototype.getStyle = function() {
  return /** @type {!proto.anytype.model.Block.Content.Text.Style} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.anytype.model.Block.Content.Text.Style} value
 * @return {!proto.anytype.model.Block.Content.Text} returns this
 */
proto.anytype.model.Block.Content.Text.prototype.setStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Marks marks = 3;
 * @return {?proto.anytype.model.Block.Content.Text.Marks}
 */
proto.anytype.model.Block.Content.Text.prototype.getMarks = function() {
  return /** @type{?proto.anytype.model.Block.Content.Text.Marks} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Content.Text.Marks, 3));
};


/**
 * @param {?proto.anytype.model.Block.Content.Text.Marks|undefined} value
 * @return {!proto.anytype.model.Block.Content.Text} returns this
*/
proto.anytype.model.Block.Content.Text.prototype.setMarks = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block.Content.Text} returns this
 */
proto.anytype.model.Block.Content.Text.prototype.clearMarks = function() {
  return this.setMarks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.Content.Text.prototype.hasMarks = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool checked = 4;
 * @return {boolean}
 */
proto.anytype.model.Block.Content.Text.prototype.getChecked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.anytype.model.Block.Content.Text} returns this
 */
proto.anytype.model.Block.Content.Text.prototype.setChecked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string color = 5;
 * @return {string}
 */
proto.anytype.model.Block.Content.Text.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Text} returns this
 */
proto.anytype.model.Block.Content.Text.prototype.setColor = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.File.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.File.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.File} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.File.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mime: jspb.Message.getFieldWithDefault(msg, 4, ""),
    size: jspb.Message.getFieldWithDefault(msg, 5, 0),
    addedat: jspb.Message.getFieldWithDefault(msg, 6, 0),
    state: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.File}
 */
proto.anytype.model.Block.Content.File.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.File;
  return proto.anytype.model.Block.Content.File.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.File} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.File}
 */
proto.anytype.model.Block.Content.File.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.anytype.model.Block.Content.File.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAddedat(value);
      break;
    case 7:
      var value = /** @type {!proto.anytype.model.Block.Content.File.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.File.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.File.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.File} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.File.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMime();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAddedat();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.anytype.model.Block.Content.File.Type = {
  NONE: 0,
  FILE: 1,
  IMAGE: 2,
  VIDEO: 3
};

/**
 * @enum {number}
 */
proto.anytype.model.Block.Content.File.State = {
  EMPTY: 0,
  UPLOADING: 1,
  DONE: 2,
  ERROR: 3
};

/**
 * optional string hash = 1;
 * @return {string}
 */
proto.anytype.model.Block.Content.File.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.File} returns this
 */
proto.anytype.model.Block.Content.File.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.anytype.model.Block.Content.File.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.File} returns this
 */
proto.anytype.model.Block.Content.File.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Type type = 3;
 * @return {!proto.anytype.model.Block.Content.File.Type}
 */
proto.anytype.model.Block.Content.File.prototype.getType = function() {
  return /** @type {!proto.anytype.model.Block.Content.File.Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.anytype.model.Block.Content.File.Type} value
 * @return {!proto.anytype.model.Block.Content.File} returns this
 */
proto.anytype.model.Block.Content.File.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string mime = 4;
 * @return {string}
 */
proto.anytype.model.Block.Content.File.prototype.getMime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.File} returns this
 */
proto.anytype.model.Block.Content.File.prototype.setMime = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 size = 5;
 * @return {number}
 */
proto.anytype.model.Block.Content.File.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.anytype.model.Block.Content.File} returns this
 */
proto.anytype.model.Block.Content.File.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 addedAt = 6;
 * @return {number}
 */
proto.anytype.model.Block.Content.File.prototype.getAddedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.anytype.model.Block.Content.File} returns this
 */
proto.anytype.model.Block.Content.File.prototype.setAddedat = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional State state = 7;
 * @return {!proto.anytype.model.Block.Content.File.State}
 */
proto.anytype.model.Block.Content.File.prototype.getState = function() {
  return /** @type {!proto.anytype.model.Block.Content.File.State} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.anytype.model.Block.Content.File.State} value
 * @return {!proto.anytype.model.Block.Content.File} returns this
 */
proto.anytype.model.Block.Content.File.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Smartblock.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Smartblock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Smartblock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Smartblock.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Smartblock}
 */
proto.anytype.model.Block.Content.Smartblock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Smartblock;
  return proto.anytype.model.Block.Content.Smartblock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Smartblock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Smartblock}
 */
proto.anytype.model.Block.Content.Smartblock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Smartblock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Smartblock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Smartblock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Smartblock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.anytype.model.Block.Content.Dataview.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Dataview.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Dataview.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Dataview} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Dataview.toObject = function(includeInstance, msg) {
  var f, obj = {
    databaseid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    viewsList: jspb.Message.toObjectList(msg.getViewsList(),
    proto.anytype.model.Block.Content.Dataview.View.toObject, includeInstance),
    schemaurl: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Dataview}
 */
proto.anytype.model.Block.Content.Dataview.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Dataview;
  return proto.anytype.model.Block.Content.Dataview.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Dataview} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Dataview}
 */
proto.anytype.model.Block.Content.Dataview.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabaseid(value);
      break;
    case 2:
      var value = new proto.anytype.model.Block.Content.Dataview.View;
      reader.readMessage(value,proto.anytype.model.Block.Content.Dataview.View.deserializeBinaryFromReader);
      msg.addViews(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Dataview.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Dataview.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Dataview} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Dataview.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabaseid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getViewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.anytype.model.Block.Content.Dataview.View.serializeBinaryToWriter
    );
  }
  f = message.getSchemaurl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.anytype.model.Block.Content.Dataview.View.repeatedFields_ = [4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Dataview.View.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Dataview.View} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Dataview.View.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sortsList: jspb.Message.toObjectList(msg.getSortsList(),
    proto.anytype.model.Block.Content.Dataview.Sort.toObject, includeInstance),
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.anytype.model.Block.Content.Dataview.Filter.toObject, includeInstance),
    relationsList: jspb.Message.toObjectList(msg.getRelationsList(),
    proto.anytype.model.Block.Content.Dataview.Relation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Dataview.View}
 */
proto.anytype.model.Block.Content.Dataview.View.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Dataview.View;
  return proto.anytype.model.Block.Content.Dataview.View.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Dataview.View} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Dataview.View}
 */
proto.anytype.model.Block.Content.Dataview.View.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.anytype.model.Block.Content.Dataview.View.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new proto.anytype.model.Block.Content.Dataview.Sort;
      reader.readMessage(value,proto.anytype.model.Block.Content.Dataview.Sort.deserializeBinaryFromReader);
      msg.addSorts(value);
      break;
    case 5:
      var value = new proto.anytype.model.Block.Content.Dataview.Filter;
      reader.readMessage(value,proto.anytype.model.Block.Content.Dataview.Filter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    case 6:
      var value = new proto.anytype.model.Block.Content.Dataview.Relation;
      reader.readMessage(value,proto.anytype.model.Block.Content.Dataview.Relation.deserializeBinaryFromReader);
      msg.addRelations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Dataview.View.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Dataview.View} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Dataview.View.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSortsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.anytype.model.Block.Content.Dataview.Sort.serializeBinaryToWriter
    );
  }
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.anytype.model.Block.Content.Dataview.Filter.serializeBinaryToWriter
    );
  }
  f = message.getRelationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.anytype.model.Block.Content.Dataview.Relation.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.anytype.model.Block.Content.Dataview.View.Type = {
  TABLE: 0,
  LIST: 1,
  GALLERY: 2,
  KANBAN: 3
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Dataview.View} returns this
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Type type = 2;
 * @return {!proto.anytype.model.Block.Content.Dataview.View.Type}
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.getType = function() {
  return /** @type {!proto.anytype.model.Block.Content.Dataview.View.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.anytype.model.Block.Content.Dataview.View.Type} value
 * @return {!proto.anytype.model.Block.Content.Dataview.View} returns this
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Dataview.View} returns this
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Sort sorts = 4;
 * @return {!Array<!proto.anytype.model.Block.Content.Dataview.Sort>}
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.getSortsList = function() {
  return /** @type{!Array<!proto.anytype.model.Block.Content.Dataview.Sort>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.anytype.model.Block.Content.Dataview.Sort, 4));
};


/**
 * @param {!Array<!proto.anytype.model.Block.Content.Dataview.Sort>} value
 * @return {!proto.anytype.model.Block.Content.Dataview.View} returns this
*/
proto.anytype.model.Block.Content.Dataview.View.prototype.setSortsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.anytype.model.Block.Content.Dataview.Sort=} opt_value
 * @param {number=} opt_index
 * @return {!proto.anytype.model.Block.Content.Dataview.Sort}
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.addSorts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.anytype.model.Block.Content.Dataview.Sort, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.anytype.model.Block.Content.Dataview.View} returns this
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.clearSortsList = function() {
  return this.setSortsList([]);
};


/**
 * repeated Filter filters = 5;
 * @return {!Array<!proto.anytype.model.Block.Content.Dataview.Filter>}
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.anytype.model.Block.Content.Dataview.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.anytype.model.Block.Content.Dataview.Filter, 5));
};


/**
 * @param {!Array<!proto.anytype.model.Block.Content.Dataview.Filter>} value
 * @return {!proto.anytype.model.Block.Content.Dataview.View} returns this
*/
proto.anytype.model.Block.Content.Dataview.View.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.anytype.model.Block.Content.Dataview.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.anytype.model.Block.Content.Dataview.Filter}
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.anytype.model.Block.Content.Dataview.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.anytype.model.Block.Content.Dataview.View} returns this
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};


/**
 * repeated Relation relations = 6;
 * @return {!Array<!proto.anytype.model.Block.Content.Dataview.Relation>}
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.getRelationsList = function() {
  return /** @type{!Array<!proto.anytype.model.Block.Content.Dataview.Relation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.anytype.model.Block.Content.Dataview.Relation, 6));
};


/**
 * @param {!Array<!proto.anytype.model.Block.Content.Dataview.Relation>} value
 * @return {!proto.anytype.model.Block.Content.Dataview.View} returns this
*/
proto.anytype.model.Block.Content.Dataview.View.prototype.setRelationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.anytype.model.Block.Content.Dataview.Relation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.anytype.model.Block.Content.Dataview.Relation}
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.addRelations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.anytype.model.Block.Content.Dataview.Relation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.anytype.model.Block.Content.Dataview.View} returns this
 */
proto.anytype.model.Block.Content.Dataview.View.prototype.clearRelationsList = function() {
  return this.setRelationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Dataview.Relation.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Dataview.Relation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Dataview.Relation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Dataview.Relation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isvisible: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Dataview.Relation}
 */
proto.anytype.model.Block.Content.Dataview.Relation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Dataview.Relation;
  return proto.anytype.model.Block.Content.Dataview.Relation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Dataview.Relation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Dataview.Relation}
 */
proto.anytype.model.Block.Content.Dataview.Relation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsvisible(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Dataview.Relation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Dataview.Relation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Dataview.Relation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Dataview.Relation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsvisible();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.anytype.model.Block.Content.Dataview.Relation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Dataview.Relation} returns this
 */
proto.anytype.model.Block.Content.Dataview.Relation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool isVisible = 2;
 * @return {boolean}
 */
proto.anytype.model.Block.Content.Dataview.Relation.prototype.getIsvisible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.anytype.model.Block.Content.Dataview.Relation} returns this
 */
proto.anytype.model.Block.Content.Dataview.Relation.prototype.setIsvisible = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Dataview.Sort.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Dataview.Sort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Dataview.Sort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Dataview.Sort.toObject = function(includeInstance, msg) {
  var f, obj = {
    relationid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Dataview.Sort}
 */
proto.anytype.model.Block.Content.Dataview.Sort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Dataview.Sort;
  return proto.anytype.model.Block.Content.Dataview.Sort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Dataview.Sort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Dataview.Sort}
 */
proto.anytype.model.Block.Content.Dataview.Sort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelationid(value);
      break;
    case 2:
      var value = /** @type {!proto.anytype.model.Block.Content.Dataview.Sort.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Dataview.Sort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Dataview.Sort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Dataview.Sort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Dataview.Sort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelationid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.anytype.model.Block.Content.Dataview.Sort.Type = {
  ASC: 0,
  DESC: 1
};

/**
 * optional string relationId = 1;
 * @return {string}
 */
proto.anytype.model.Block.Content.Dataview.Sort.prototype.getRelationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Dataview.Sort} returns this
 */
proto.anytype.model.Block.Content.Dataview.Sort.prototype.setRelationid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Type type = 2;
 * @return {!proto.anytype.model.Block.Content.Dataview.Sort.Type}
 */
proto.anytype.model.Block.Content.Dataview.Sort.prototype.getType = function() {
  return /** @type {!proto.anytype.model.Block.Content.Dataview.Sort.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.anytype.model.Block.Content.Dataview.Sort.Type} value
 * @return {!proto.anytype.model.Block.Content.Dataview.Sort} returns this
 */
proto.anytype.model.Block.Content.Dataview.Sort.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Block.Content.Dataview.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Block.Content.Dataview.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Block.Content.Dataview.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Dataview.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    operator: jspb.Message.getFieldWithDefault(msg, 1, 0),
    relationid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    condition: jspb.Message.getFieldWithDefault(msg, 3, 0),
    value: (f = msg.getValue()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Block.Content.Dataview.Filter}
 */
proto.anytype.model.Block.Content.Dataview.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Block.Content.Dataview.Filter;
  return proto.anytype.model.Block.Content.Dataview.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Block.Content.Dataview.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Block.Content.Dataview.Filter}
 */
proto.anytype.model.Block.Content.Dataview.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.anytype.model.Block.Content.Dataview.Filter.Operator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelationid(value);
      break;
    case 3:
      var value = /** @type {!proto.anytype.model.Block.Content.Dataview.Filter.Condition} */ (reader.readEnum());
      msg.setCondition(value);
      break;
    case 4:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Block.Content.Dataview.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Block.Content.Dataview.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Block.Content.Dataview.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Block.Content.Dataview.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRelationid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCondition();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.anytype.model.Block.Content.Dataview.Filter.Operator = {
  AND: 0,
  OR: 1
};

/**
 * @enum {number}
 */
proto.anytype.model.Block.Content.Dataview.Filter.Condition = {
  EQUAL: 0,
  NOTEQUAL: 1,
  GREATER: 2,
  LESS: 3,
  GREATEROREQUAL: 4,
  LESSOREQUAL: 5,
  LIKE: 6,
  NOTLIKE: 7,
  IN: 8,
  NOTIN: 9
};

/**
 * optional Operator operator = 1;
 * @return {!proto.anytype.model.Block.Content.Dataview.Filter.Operator}
 */
proto.anytype.model.Block.Content.Dataview.Filter.prototype.getOperator = function() {
  return /** @type {!proto.anytype.model.Block.Content.Dataview.Filter.Operator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.anytype.model.Block.Content.Dataview.Filter.Operator} value
 * @return {!proto.anytype.model.Block.Content.Dataview.Filter} returns this
 */
proto.anytype.model.Block.Content.Dataview.Filter.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string relationId = 2;
 * @return {string}
 */
proto.anytype.model.Block.Content.Dataview.Filter.prototype.getRelationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Dataview.Filter} returns this
 */
proto.anytype.model.Block.Content.Dataview.Filter.prototype.setRelationid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Condition condition = 3;
 * @return {!proto.anytype.model.Block.Content.Dataview.Filter.Condition}
 */
proto.anytype.model.Block.Content.Dataview.Filter.prototype.getCondition = function() {
  return /** @type {!proto.anytype.model.Block.Content.Dataview.Filter.Condition} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.anytype.model.Block.Content.Dataview.Filter.Condition} value
 * @return {!proto.anytype.model.Block.Content.Dataview.Filter} returns this
 */
proto.anytype.model.Block.Content.Dataview.Filter.prototype.setCondition = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.Value value = 4;
 * @return {?proto.google.protobuf.Value}
 */
proto.anytype.model.Block.Content.Dataview.Filter.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 4));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.anytype.model.Block.Content.Dataview.Filter} returns this
*/
proto.anytype.model.Block.Content.Dataview.Filter.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block.Content.Dataview.Filter} returns this
 */
proto.anytype.model.Block.Content.Dataview.Filter.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.Content.Dataview.Filter.prototype.hasValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string databaseId = 1;
 * @return {string}
 */
proto.anytype.model.Block.Content.Dataview.prototype.getDatabaseid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Dataview} returns this
 */
proto.anytype.model.Block.Content.Dataview.prototype.setDatabaseid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated View views = 2;
 * @return {!Array<!proto.anytype.model.Block.Content.Dataview.View>}
 */
proto.anytype.model.Block.Content.Dataview.prototype.getViewsList = function() {
  return /** @type{!Array<!proto.anytype.model.Block.Content.Dataview.View>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.anytype.model.Block.Content.Dataview.View, 2));
};


/**
 * @param {!Array<!proto.anytype.model.Block.Content.Dataview.View>} value
 * @return {!proto.anytype.model.Block.Content.Dataview} returns this
*/
proto.anytype.model.Block.Content.Dataview.prototype.setViewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.anytype.model.Block.Content.Dataview.View=} opt_value
 * @param {number=} opt_index
 * @return {!proto.anytype.model.Block.Content.Dataview.View}
 */
proto.anytype.model.Block.Content.Dataview.prototype.addViews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.anytype.model.Block.Content.Dataview.View, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.anytype.model.Block.Content.Dataview} returns this
 */
proto.anytype.model.Block.Content.Dataview.prototype.clearViewsList = function() {
  return this.setViewsList([]);
};


/**
 * optional string schemaURL = 3;
 * @return {string}
 */
proto.anytype.model.Block.Content.Dataview.prototype.getSchemaurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block.Content.Dataview} returns this
 */
proto.anytype.model.Block.Content.Dataview.prototype.setSchemaurl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.anytype.model.Block.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct fields = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.anytype.model.Block.prototype.getFields = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.anytype.model.Block} returns this
*/
proto.anytype.model.Block.prototype.setFields = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearFields = function() {
  return this.setFields(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.prototype.hasFields = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Restrictions restrictions = 3;
 * @return {?proto.anytype.model.Block.Restrictions}
 */
proto.anytype.model.Block.prototype.getRestrictions = function() {
  return /** @type{?proto.anytype.model.Block.Restrictions} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Restrictions, 3));
};


/**
 * @param {?proto.anytype.model.Block.Restrictions|undefined} value
 * @return {!proto.anytype.model.Block} returns this
*/
proto.anytype.model.Block.prototype.setRestrictions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearRestrictions = function() {
  return this.setRestrictions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.prototype.hasRestrictions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string childrenIds = 4;
 * @return {!Array<string>}
 */
proto.anytype.model.Block.prototype.getChildrenidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.setChildrenidsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.addChildrenids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearChildrenidsList = function() {
  return this.setChildrenidsList([]);
};


/**
 * optional string backgroundColor = 5;
 * @return {string}
 */
proto.anytype.model.Block.prototype.getBackgroundcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.setBackgroundcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Align align = 6;
 * @return {!proto.anytype.model.Block.Align}
 */
proto.anytype.model.Block.prototype.getAlign = function() {
  return /** @type {!proto.anytype.model.Block.Align} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.anytype.model.Block.Align} value
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.setAlign = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional Content.Smartblock smartblock = 11;
 * @return {?proto.anytype.model.Block.Content.Smartblock}
 */
proto.anytype.model.Block.prototype.getSmartblock = function() {
  return /** @type{?proto.anytype.model.Block.Content.Smartblock} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Content.Smartblock, 11));
};


/**
 * @param {?proto.anytype.model.Block.Content.Smartblock|undefined} value
 * @return {!proto.anytype.model.Block} returns this
*/
proto.anytype.model.Block.prototype.setSmartblock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.anytype.model.Block.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearSmartblock = function() {
  return this.setSmartblock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.prototype.hasSmartblock = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Content.Text text = 14;
 * @return {?proto.anytype.model.Block.Content.Text}
 */
proto.anytype.model.Block.prototype.getText = function() {
  return /** @type{?proto.anytype.model.Block.Content.Text} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Content.Text, 14));
};


/**
 * @param {?proto.anytype.model.Block.Content.Text|undefined} value
 * @return {!proto.anytype.model.Block} returns this
*/
proto.anytype.model.Block.prototype.setText = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.anytype.model.Block.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearText = function() {
  return this.setText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.prototype.hasText = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Content.File file = 15;
 * @return {?proto.anytype.model.Block.Content.File}
 */
proto.anytype.model.Block.prototype.getFile = function() {
  return /** @type{?proto.anytype.model.Block.Content.File} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Content.File, 15));
};


/**
 * @param {?proto.anytype.model.Block.Content.File|undefined} value
 * @return {!proto.anytype.model.Block} returns this
*/
proto.anytype.model.Block.prototype.setFile = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.anytype.model.Block.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearFile = function() {
  return this.setFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.prototype.hasFile = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Content.Layout layout = 16;
 * @return {?proto.anytype.model.Block.Content.Layout}
 */
proto.anytype.model.Block.prototype.getLayout = function() {
  return /** @type{?proto.anytype.model.Block.Content.Layout} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Content.Layout, 16));
};


/**
 * @param {?proto.anytype.model.Block.Content.Layout|undefined} value
 * @return {!proto.anytype.model.Block} returns this
*/
proto.anytype.model.Block.prototype.setLayout = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.anytype.model.Block.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearLayout = function() {
  return this.setLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.prototype.hasLayout = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional Content.Div div = 17;
 * @return {?proto.anytype.model.Block.Content.Div}
 */
proto.anytype.model.Block.prototype.getDiv = function() {
  return /** @type{?proto.anytype.model.Block.Content.Div} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Content.Div, 17));
};


/**
 * @param {?proto.anytype.model.Block.Content.Div|undefined} value
 * @return {!proto.anytype.model.Block} returns this
*/
proto.anytype.model.Block.prototype.setDiv = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.anytype.model.Block.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearDiv = function() {
  return this.setDiv(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.prototype.hasDiv = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Content.Bookmark bookmark = 18;
 * @return {?proto.anytype.model.Block.Content.Bookmark}
 */
proto.anytype.model.Block.prototype.getBookmark = function() {
  return /** @type{?proto.anytype.model.Block.Content.Bookmark} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Content.Bookmark, 18));
};


/**
 * @param {?proto.anytype.model.Block.Content.Bookmark|undefined} value
 * @return {!proto.anytype.model.Block} returns this
*/
proto.anytype.model.Block.prototype.setBookmark = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.anytype.model.Block.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearBookmark = function() {
  return this.setBookmark(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.prototype.hasBookmark = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Content.Icon icon = 19;
 * @return {?proto.anytype.model.Block.Content.Icon}
 */
proto.anytype.model.Block.prototype.getIcon = function() {
  return /** @type{?proto.anytype.model.Block.Content.Icon} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Content.Icon, 19));
};


/**
 * @param {?proto.anytype.model.Block.Content.Icon|undefined} value
 * @return {!proto.anytype.model.Block} returns this
*/
proto.anytype.model.Block.prototype.setIcon = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.anytype.model.Block.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearIcon = function() {
  return this.setIcon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.prototype.hasIcon = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional Content.Link link = 20;
 * @return {?proto.anytype.model.Block.Content.Link}
 */
proto.anytype.model.Block.prototype.getLink = function() {
  return /** @type{?proto.anytype.model.Block.Content.Link} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Content.Link, 20));
};


/**
 * @param {?proto.anytype.model.Block.Content.Link|undefined} value
 * @return {!proto.anytype.model.Block} returns this
*/
proto.anytype.model.Block.prototype.setLink = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.anytype.model.Block.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearLink = function() {
  return this.setLink(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.prototype.hasLink = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Content.Dataview dataview = 21;
 * @return {?proto.anytype.model.Block.Content.Dataview}
 */
proto.anytype.model.Block.prototype.getDataview = function() {
  return /** @type{?proto.anytype.model.Block.Content.Dataview} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Content.Dataview, 21));
};


/**
 * @param {?proto.anytype.model.Block.Content.Dataview|undefined} value
 * @return {!proto.anytype.model.Block} returns this
*/
proto.anytype.model.Block.prototype.setDataview = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.anytype.model.Block.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Block} returns this
 */
proto.anytype.model.Block.prototype.clearDataview = function() {
  return this.setDataview(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Block.prototype.hasDataview = function() {
  return jspb.Message.getField(this, 21) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.BlockMetaOnly.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.BlockMetaOnly.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.BlockMetaOnly} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.BlockMetaOnly.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fields: (f = msg.getFields()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.BlockMetaOnly}
 */
proto.anytype.model.BlockMetaOnly.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.BlockMetaOnly;
  return proto.anytype.model.BlockMetaOnly.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.BlockMetaOnly} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.BlockMetaOnly}
 */
proto.anytype.model.BlockMetaOnly.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.BlockMetaOnly.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.BlockMetaOnly.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.BlockMetaOnly} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.BlockMetaOnly.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFields();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.anytype.model.BlockMetaOnly.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.BlockMetaOnly} returns this
 */
proto.anytype.model.BlockMetaOnly.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct fields = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.anytype.model.BlockMetaOnly.prototype.getFields = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.anytype.model.BlockMetaOnly} returns this
*/
proto.anytype.model.BlockMetaOnly.prototype.setFields = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.BlockMetaOnly} returns this
 */
proto.anytype.model.BlockMetaOnly.prototype.clearFields = function() {
  return this.setFields(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.BlockMetaOnly.prototype.hasFields = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Range.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Range.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Range} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Range.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: jspb.Message.getFieldWithDefault(msg, 1, 0),
    to: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Range}
 */
proto.anytype.model.Range.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Range;
  return proto.anytype.model.Range.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Range} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Range}
 */
proto.anytype.model.Range.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Range.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Range.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Range} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Range.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 from = 1;
 * @return {number}
 */
proto.anytype.model.Range.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.anytype.model.Range} returns this
 */
proto.anytype.model.Range.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 to = 2;
 * @return {number}
 */
proto.anytype.model.Range.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.anytype.model.Range} returns this
 */
proto.anytype.model.Range.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Account.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Account.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Account} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Account.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    avatar: (f = msg.getAvatar()) && proto.anytype.model.Account.Avatar.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Account}
 */
proto.anytype.model.Account.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Account;
  return proto.anytype.model.Account.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Account} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Account}
 */
proto.anytype.model.Account.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.anytype.model.Account.Avatar;
      reader.readMessage(value,proto.anytype.model.Account.Avatar.deserializeBinaryFromReader);
      msg.setAvatar(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Account.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Account.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Account} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Account.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAvatar();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.anytype.model.Account.Avatar.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.anytype.model.Account.Avatar.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.anytype.model.Account.Avatar.AvatarCase = {
  AVATAR_NOT_SET: 0,
  IMAGE: 1,
  COLOR: 2
};

/**
 * @return {proto.anytype.model.Account.Avatar.AvatarCase}
 */
proto.anytype.model.Account.Avatar.prototype.getAvatarCase = function() {
  return /** @type {proto.anytype.model.Account.Avatar.AvatarCase} */(jspb.Message.computeOneofCase(this, proto.anytype.model.Account.Avatar.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.Account.Avatar.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.Account.Avatar.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.Account.Avatar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Account.Avatar.toObject = function(includeInstance, msg) {
  var f, obj = {
    image: (f = msg.getImage()) && proto.anytype.model.Block.Content.File.toObject(includeInstance, f),
    color: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.Account.Avatar}
 */
proto.anytype.model.Account.Avatar.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.Account.Avatar;
  return proto.anytype.model.Account.Avatar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.Account.Avatar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.Account.Avatar}
 */
proto.anytype.model.Account.Avatar.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.anytype.model.Block.Content.File;
      reader.readMessage(value,proto.anytype.model.Block.Content.File.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.Account.Avatar.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.Account.Avatar.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.Account.Avatar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.Account.Avatar.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.anytype.model.Block.Content.File.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Block.Content.File image = 1;
 * @return {?proto.anytype.model.Block.Content.File}
 */
proto.anytype.model.Account.Avatar.prototype.getImage = function() {
  return /** @type{?proto.anytype.model.Block.Content.File} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Block.Content.File, 1));
};


/**
 * @param {?proto.anytype.model.Block.Content.File|undefined} value
 * @return {!proto.anytype.model.Account.Avatar} returns this
*/
proto.anytype.model.Account.Avatar.prototype.setImage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.anytype.model.Account.Avatar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Account.Avatar} returns this
 */
proto.anytype.model.Account.Avatar.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Account.Avatar.prototype.hasImage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string color = 2;
 * @return {string}
 */
proto.anytype.model.Account.Avatar.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Account.Avatar} returns this
 */
proto.anytype.model.Account.Avatar.prototype.setColor = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.anytype.model.Account.Avatar.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.anytype.model.Account.Avatar} returns this
 */
proto.anytype.model.Account.Avatar.prototype.clearColor = function() {
  return jspb.Message.setOneofField(this, 2, proto.anytype.model.Account.Avatar.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Account.Avatar.prototype.hasColor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.anytype.model.Account.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Account} returns this
 */
proto.anytype.model.Account.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.anytype.model.Account.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.Account} returns this
 */
proto.anytype.model.Account.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Avatar avatar = 3;
 * @return {?proto.anytype.model.Account.Avatar}
 */
proto.anytype.model.Account.prototype.getAvatar = function() {
  return /** @type{?proto.anytype.model.Account.Avatar} */ (
    jspb.Message.getWrapperField(this, proto.anytype.model.Account.Avatar, 3));
};


/**
 * @param {?proto.anytype.model.Account.Avatar|undefined} value
 * @return {!proto.anytype.model.Account} returns this
*/
proto.anytype.model.Account.prototype.setAvatar = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.anytype.model.Account} returns this
 */
proto.anytype.model.Account.prototype.clearAvatar = function() {
  return this.setAvatar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.anytype.model.Account.prototype.hasAvatar = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.anytype.model.LinkPreview.prototype.toObject = function(opt_includeInstance) {
  return proto.anytype.model.LinkPreview.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.anytype.model.LinkPreview} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.LinkPreview.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imageurl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    faviconurl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.anytype.model.LinkPreview}
 */
proto.anytype.model.LinkPreview.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.anytype.model.LinkPreview;
  return proto.anytype.model.LinkPreview.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.anytype.model.LinkPreview} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.anytype.model.LinkPreview}
 */
proto.anytype.model.LinkPreview.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageurl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFaviconurl(value);
      break;
    case 6:
      var value = /** @type {!proto.anytype.model.LinkPreview.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.anytype.model.LinkPreview.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.anytype.model.LinkPreview.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.anytype.model.LinkPreview} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.anytype.model.LinkPreview.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImageurl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFaviconurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.anytype.model.LinkPreview.Type = {
  UNKNOWN: 0,
  PAGE: 1,
  IMAGE: 2,
  TEXT: 3
};

/**
 * optional string url = 1;
 * @return {string}
 */
proto.anytype.model.LinkPreview.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.LinkPreview} returns this
 */
proto.anytype.model.LinkPreview.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.anytype.model.LinkPreview.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.LinkPreview} returns this
 */
proto.anytype.model.LinkPreview.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.anytype.model.LinkPreview.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.LinkPreview} returns this
 */
proto.anytype.model.LinkPreview.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string imageUrl = 4;
 * @return {string}
 */
proto.anytype.model.LinkPreview.prototype.getImageurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.LinkPreview} returns this
 */
proto.anytype.model.LinkPreview.prototype.setImageurl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string faviconUrl = 5;
 * @return {string}
 */
proto.anytype.model.LinkPreview.prototype.getFaviconurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.anytype.model.LinkPreview} returns this
 */
proto.anytype.model.LinkPreview.prototype.setFaviconurl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Type type = 6;
 * @return {!proto.anytype.model.LinkPreview.Type}
 */
proto.anytype.model.LinkPreview.prototype.getType = function() {
  return /** @type {!proto.anytype.model.LinkPreview.Type} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.anytype.model.LinkPreview.Type} value
 * @return {!proto.anytype.model.LinkPreview} returns this
 */
proto.anytype.model.LinkPreview.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


goog.object.extend(exports, proto.anytype.model);
