@import "~scss/_vars";

.blocks {
	.block.blockMedia { padding: 6px 0px; }
	.block.blockMedia.isResizing * { cursor: nwse-resize; }
	
	.block.blockMedia {
		.focusable.isFocused { background: none; }
		.focusable.isFocused::before { 
			content: ""; position: absolute; left: 0px; top: 0px; width: 100%; height: 100%; background: rgba(134, 125, 66, 0.1); z-index: 1; 
			pointer-events: none;
		}

		.loaderWrapper { border-radius: 4px; border: solid 1px #d2d0c2; height: 48px; width: 100%; }
		.error { margin: 0px; @include text-small; line-height: 22px; }
		
		.wrap { max-width: 100%; position: relative; display: inline-block; overflow: hidden; }
		.media { width: 100%; display: block; }

		.wrap.broken { 
			@include text-common; position: static; width: 100%; line-height: 20px; padding: 11px 13px; border-radius: 6px; border: solid 1px $colorLightGrey; 
			color: $colorMediumGrey; height: 44px;
		}
		.wrap.broken {
			img:before { 
				content: " "; display: block; position: absolute; left: 13px; top: 11px; height: calc(100% - 22px); width: calc(100% - 26px);
				background: #fff;
			}

			img:after { content: "ðŸ”—" " Image is broken"; display: block; text-align: center; position: absolute; left: 13px; top: 11px; }
			.icon.resize { display: none; }
		}

		video { height: 100%; }

		.inner.audio { background-color: #f3f2ec; padding: 12px 18px; border-radius: 6px; overflow: hidden; }

		.audioControls { width: 100%; height: 20px; line-height: 20px; white-space: nowrap; }
		.audioControls {
			.icon { vertical-align: top; }
			.icon.play { width: 20px; height: 20px; background-image: url('~img/icon/audio/play.svg'); cursor: pointer; }
			.icon.play.active { background-image: url('~img/icon/audio/pause.svg'); }

			.icon.volume { width: 20px; height: 20px; margin-right: 8px; background-image: url('~img/icon/audio/volume.svg'); cursor: pointer; }
			.icon.volume.active { background-image: url('~img/icon/audio/mute.svg'); }

			.time { 
				display: inline-block; vertical-align: top; @include text-common; width: 100px; text-align: center;
				font-weight: 500; line-height: 20px;
			}

			.line { width: 1px; height: 24px; margin: -2px 20px 0px 20px; background: #dfddd0; display: inline-block; vertical-align: middle; }

			.input-drag { display: inline-block; vertical-align: top; height: 20px; }
			.input-drag {
				.icon { width: 6px; height: 6px; border: 0px; background: none;  }
				.bullet { width: 6px; height: 6px; border-radius: 100%; background: #f09c0e; } 
				.fill { background: #f09c0e; }
				.back { background: #dfddd0; }
			}

			#time { margin: 0px 12px 0px 8px; width: 40%; }
			#volume { width: 10%; margin-right: 8px; }
		}

		.inner.audio.vertical {
			.audioControls { height: 56px; }
			.line { display: block; width: 100%; height: 1px; margin: 8px 0px 7px 0px; }
			#volume { width: 40%; }
		}
		
		.videoControls {
			.icon.resize {
				width: 20px; height: 20px; position: absolute; right: 2px; bottom: 2px; z-index: 1;
				background-image: url('~img/icon/resize.svg'); opacity: 0; cursor: nwse-resize;
			}
			.icon.play {
				width: 64px; height: 64px; border-radius: 100%; position: absolute; left: 50%; top: 50%; margin: -32px 0px 0px -32px;
				background-image: url('~img/icon/play.svg'); background-color: rgba(255,255,255,0.7); cursor: pointer;
				background-size: 24px 28px; background-position: 24px center;
			}
			.icon.play:hover { background-color: rgba(255,255,255,0.9); }
		}
				
		.icon.dots {
			width: 32px; height: 32px; border-radius: 8px; background-color: rgba(0,0,0,0.35); position: absolute; right: 10px; top: 10px;
			background-image: url('~img/icon/menu/file/dots.svg'); opacity: 0; background-size: 24px 24px; cursor: pointer; z-index: 1;
		}
	}
	.block.blockMedia > .wrapContent > .selectable > .dropTarget { line-height: 0px; }

	.block.blockMedia.isReadonly > .wrapContent > .selectable > .dropTarget .icon.resize { display: none; }
	
	.block.blockMedia:hover {
		.icon.resize { opacity: 1; }
		.icon.dots { opacity: 1; }
	}
	
	.block.blockMedia > .wrapContent > .selectable.isSelected > .dropTarget > .focusable > .wrap {
		.icon.resize { opacity: 1; }
		.icon.dots { opacity: 1; }
	}
	
	.block.blockMedia > .wrapContent > .selectable > .dropTarget > .focusable.isPlaying > .wrap {
		.icon.resize { display: none; }
		.icon.dots { display: none; }
		.icon.play { display: none; }
	}
}