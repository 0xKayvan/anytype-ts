@import "~scss/_vars";

.blocks {
	.block.blockTable { padding: 6px 0px; }
	.block.blockTable { 
		.scrollWrap { overflow-x: overlay; width: 100%; padding-bottom: 10px; }

		.table { display: inline-block; height: 100%; border-collapse: collapse; font-family: 'Inter'; }
		
		.row { display: flex; position: relative; padding-left: 19px; }
		.row.isDragging { 
			border-top: 1px solid $colorMediumGrey; box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.2); background: #fff; width: auto;
		}

		.fillRect { 
			width: 20px; height: 20px; position: absolute; left: 0px; top: 0px; background: $colorLightGrey;
			border-top: 1px solid $colorMediumGrey; border-left: 1px solid $colorMediumGrey; 
		}

		.handleRow, .handleColumn { 
			cursor: grab !important; background: $colorLightGrey; transition: $transitionFast; @include text-very-small;
			color: $colorBlack; text-align: center; display: flex; align-items: center; font-weight: 400;
		}
		.handleRow:hover, .handleColumn:hover { background: $colorMediumGrey; }

		.handleRow, .handleColumn {
			.txt { width: 100%; }
		}

		.handleColumn { 
			height: 20px; width: 100%; border-bottom: 1px solid $colorMediumGrey; border-top: 1px solid $colorMediumGrey;; 
		}
		.handleColumn.isFirst { border-left: 1px solid $colorMediumGrey; }

		.cell.handleRow { 
			width: 20px; height: 100%; position: absolute; left: 0px; top: 0px; border-left: 1px solid $colorMediumGrey; z-index: 1;
			@include text-very-small; color: $colorBlack;
		}
		.cell.handleRow.isFirst { border-top: 1px solid $colorMediumGrey; height: calc(100% - 19px); top: 19px; }

		.cell { 
			border-right: 1px solid $colorMediumGrey; border-bottom: 1px solid $colorMediumGrey; 
			@include text-common; line-height: 20px; vertical-align: top; position: relative; cursor: text; flex-shrink: 0;
		}
		.cell.isHead { font-weight: bold; white-space: nowrap; height: 100%; vertical-align: inherit; }
		.cell.isHead {
			.value { @include text-overflow-nw; }
		}
		.cell.isDragging { border-left: 1px solid $colorMediumGrey; border-top: 1px solid $colorMediumGrey; background: #fff; }
		.cell.isDragging .handleColumn { background: $colorMediumGrey; }

		.cell.align-h0 .value { text-align: left; }
		.cell.align-h1 .value { text-align: right; }
		.cell.align-h2 .value { text-align: center; }

		.cell.align-v2 { vertical-align: middle; }
		.cell.align-v3 { vertical-align: top; }
		.cell.align-v4 { vertical-align: bottom; }

		.cell {
			.resize { width: 6px; height: 100%; position: absolute; right: -3px; top: 0px; cursor: col-resize; z-index: 1; }
			.click { width: 100%; height: 100%; }

			.value { padding: 6px 8px; min-height: 32px; width: 100%; display: inline-block; vertical-align: inherit; }
			.value.isEditing { 
				-webkit-user-modify: read-write-plaintext-only; box-shadow: 0px 0px 0px 2px $colorBlack; z-index: 1; border-radius: 2px;
			}

			.icon.arrow { 
				width: 20px; height: 20px; position: absolute; right: 0px; top: 0px; background-image: url('~img/arrow/select/dark.svg');
				cursor: pointer; z-index: 1; opacity: 0; transform: rotateZ(180deg);
			}
			.icon.arrow.c1 { transform: none; }
			.icon.arrow.show { opacity: 1; }
		}
		.cell.isEditing { z-index: 2; }
		.cell:hover {
			.icon.arrow { opacity: 1; }
		}
	}
}