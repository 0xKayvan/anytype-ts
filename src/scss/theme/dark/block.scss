.block.blockCover {
    .loaderWrapper { background: rgba(0,0,0,0.3); }
    .loaderWrapper {
        .loader { border-color: $colorLinePrimary; border-left-color: $colorOrange; }
    }

    .elements {
        .btn.white { background: $colorBgIcon; color: $colorPrimary; }
        .btn.white:hover { background: $colorBlack; color: $colorPrimary; }

        .btn {
			.icon.icon { background-image: url('#{$themePath}/icon/add/icon1.svg'); }
			.icon.addCover { background-image: url('#{$themePath}/icon/add/cover1.svg'); }
			.icon.layout { background-image: url('#{$themePath}/icon/add/layout1.svg'); }
			.icon.relation { background-image: url('#{$themePath}/icon/add/relation1.svg'); }
		}
    }

    .author a:hover { color: $colorOrange; }
}

.blocks {
    /* Common */

    .block {
        .icon.dnd { border-color: rgba(217, 212, 184, 0.14); }

		.emptyToggle { color: $colorSecondary; }
		.emptyToggle:hover { color: $colorPrimary; }
    }
    .block:hover > .wrapMenu > .icon.dnd { background-image: url('#{$themePath}/icon/block/menu1.svg'); }

    /* BlockIconPage */

    .block.blockIconPage {
        .iconObject { box-shadow: 0px 0px 0px 2px $colorBlack; }
    }

    /* BlockIconUser */

    .block.blockIconUser {
        .iconObject { box-shadow: 0px 0px 0px 2px $colorBlack; }
    }

    /* BlockFile */

    .block.blockFile {
        .loaderWrapper { border: 0px; }
    }

	/* BlockRelation */

	.block.blockRelation {
        .cell.canEdit:hover { background: $colorHover; }
    }

    /* BlockMedia */

    .block.blockMedia {
        .focusable.isFocused::before { background: $colorHover; }

        .loaderWrapper { border: 0px; }

        .audioControls {
			.icon.play { background-image: url('#{$themePath}/icon/audio/play.svg'); }
			.icon.play.active { background-image: url('#{$themePath}/icon/audio/pause.svg'); }

			.icon.volume { background-image: url('#{$themePath}/icon/audio/volume.svg'); }
			.icon.volume.active { background-image: url('#{$themePath}/icon/audio/mute.svg'); }

			.input-drag {
				.back { background: $colorHover; }
			}
        }

        .wrap.broken { border-color: $colorLinePrimary; }
        .wrap.broken {
            img:before { background: $colorBgLight; }
        }

        .pdfWrapper { box-shadow: 0px 0px 0px 1px $colorLinePrimary; }
    }
    .block.blockMedia.isAudio.withFile > .wrapContent { background-color: $colorHover; }

    /* BlockDataview */

    .block.blockDataview {
        .icon.plus { background-image: url('#{$themePath}/icon/plus/menu0.svg'); }
        .icon.plus:hover { background-image: url('#{$themePath}/icon/plus/menu1.svg'); }

        .dataviewControls {
            .line { background: $colorLineSecondary; }
            .viewItem { color: $colorSecondary; }
            .viewItem {
                .icon.arrow { background-image: url('#{$themePath}/arrow/view.svg'); }
            }
            .viewItem:hover, .viewItem.active { color: $colorPrimary; }
            .viewItem.isDragging { background: $colorHover; }

            .icon.search { background-image: url('#{$themePath}/icon/dataview/button/search0.svg'); }
			.icon.manager { background-image: url('#{$themePath}/icon/dataview/button/manager0.svg'); }
			.icon.plus { background-image: url('#{$themePath}/icon/dataview/button/plus0.svg'); }

			.icon.search:hover, .icon.search.active { background-image: url('#{$themePath}/icon/dataview/button/search1.svg'); }
			.icon.manager:hover, .icon.manager.active { background-image: url('#{$themePath}/icon/dataview/button/manager1.svg'); }
			.icon.plus:hover, .icon.plus.active { background-image: url('#{$themePath}/icon/dataview/button/plus1.svg'); }
        }

        .cellHead .resize .line { background: $colorLineSecondary; }
        .cellHead.isDragging { background: $colorHover; }

        .viewItem.viewGrid,
		.viewItem.viewList {
			.cell.add { color: $colorSecondary; }
			.cell.add {
				.btn:hover { color: $colorPrimary; }
				.btn:hover {
					.icon.plus { background-image: url('#{$themePath}/icon/plus/menu1.svg'); }
				}
			}
		}

        .viewItem.viewGrid { box-shadow: 0px -1px $colorLineSecondary inset; }
        .viewItem.viewGrid {
            .row { box-shadow: 0px 1px $colorLineSecondary inset; }
        }

        .viewItem.viewBoard {
            .cellContent.isName { color: $colorPrimary; }
        }

        .viewItem.viewList {
            .cellContent.isName { color: $colorPrimary; }
        }

        .viewItem.viewGallery {
            .card { background: $colorBlack; border-color: $colorLinePrimary; }
            .card {
                .cover { border-color: $colorLinePrimary; background-color: $colorBgIcon; }
            }

            .cellContent.isName { color: $colorPrimary; }
        }

        .viewItem.viewBoard {
            .cardContent { background: $colorBlack; border-color: $colorLinePrimary; }
			.card.add { border-color: $colorLinePrimary; }
            .cellContent.isName { color: $colorPrimary; }
        }
    }

    /* BlockType */

    .block.blockType {
        .item {
            .iconObject { background: $colorBgIcon; }
        }
        .item.hover { background: $colorHover; }
    }

    /* BlockText */

    .block.blockText {
        kbd { background: $colorHover; color: $colorOrange; }
		lnk, obj { border-color: $colorSecondary; }
		lnk:hover, obj:hover { border-color: $colorPrimary; }
    }

    .block.blockText.callout > .wrapContent { background: $colorHover; }
    .block.blockText.code > .wrapContent > .selectable > .dropTarget { background: $colorHover; }

    /* BlockLink */

    .block.blockLink {
        .loading, .deleted { color: $colorSecondary; }

		.linkCard.text {
			.cardName .name { border-color: $colorLinePrimary; }
		}

		.linkCard.c48.withIcon {
			.iconObject { background-color: $colorBgIcon; }
		}

		.linkCard.card {
			.side.left, .side.right { border-color: $colorLineSecondary; }
		}
    }

	.block.blockLink:hover {
		.linkCard.text {
			.cardName .name { border-color: $colorPrimary; }
		}
		.linkCard.card {
			.side.left, .side.right { border-color: $colorLinePrimary; }
		}
	}

    /* BlockDiv */

    .block.blockDiv {
        .line { border-color: $colorSecondary; }
        .dot { background: $colorSecondary !important; }
    }

    /* BlockLatex */

    .block.blockLatex {
        .select { color: $colorPrimary; }
        .wrap.isEditing { box-shadow: 0px 0px 0px 1px $colorLinePrimary; }
        #input { background: $colorBgIcon; }
    }

    /* BlockBookmark */

    .block.blockBookmark {
        .inner { border-color: transparent; background-color: $colorHover; }
        .inner.vertical {
            .side.right { border-color: $colorLinePrimary; }
        }

        .name { color: $colorPrimary; }
        .descr { color: $colorSecondary; }
        .link { color: $colorSecondary; }
    }

    /* BlockTableOfContenst */

	.block.blockTableOfContents { 
		.item { color: $colorSecondary; }
		.item span { border-bottom: 1px solid rgba(146, 144, 130, 0.5); }

		.item:hover span { border-color: $colorDarkGrey; }
	}

	/* BlockTable */

	.block.blockTable { 
		.handleRow, .handleColumn { border-color: $colorBlack; }
		.table { color: $colorLinePrimary; }
		.cell { background: $colorBlack; color: $colorLinePrimary; }
		.cell {
			.block { color: $colorPrimary; }
		}
	}
}